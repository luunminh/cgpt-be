/* eslint-disable */
export default async () => {
    const t = {
        ["./core/generated/user/entities/user.entity"]: await import("./core/generated/user/entities/user.entity"),
        ["./core/generated/permission/entities/permission.entity"]: await import("./core/generated/permission/entities/permission.entity"),
        ["./core/generated/role-to-permission/entities/role-to-permission.entity"]: await import("./core/generated/role-to-permission/entities/role-to-permission.entity"),
        ["./core/generated/permission-group/entities/permission-group.entity"]: await import("./core/generated/permission-group/entities/permission-group.entity"),
        ["./core/generated/role/entities/role.entity"]: await import("./core/generated/role/entities/role.entity"),
        ["./core/generated/user-to-role/entities/user-to-role.entity"]: await import("./core/generated/user-to-role/entities/user-to-role.entity"),
        ["./core/generated/transaction/entities/transaction.entity"]: await import("./core/generated/transaction/entities/transaction.entity"),
        [".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"]: await import(".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"),
        ["./core/generated/group/entities/group.entity"]: await import("./core/generated/group/entities/group.entity"),
        ["./core/generated/verification-token/entities/verification-token.entity"]: await import("./core/generated/verification-token/entities/verification-token.entity"),
        ["./core/generated/group-member/entities/group-member.entity"]: await import("./core/generated/group-member/entities/group-member.entity"),
        ["./core/generated/profile/entities/profile.entity"]: await import("./core/generated/profile/entities/profile.entity"),
        ["./core/generated/transaction-comment/entities/transaction-comment.entity"]: await import("./core/generated/transaction-comment/entities/transaction-comment.entity"),
        ["./core/generated/transaction-participant/entities/transaction-participant.entity"]: await import("./core/generated/transaction-participant/entities/transaction-participant.entity"),
        ["./core/generated/ledger/entities/ledger.entity"]: await import("./core/generated/ledger/entities/ledger.entity"),
        ["./core/generated/lk-country/entities/lk-country.entity"]: await import("./core/generated/lk-country/entities/lk-country.entity"),
        ["./core/generated/expense-transaction/entities/expense-transaction.entity"]: await import("./core/generated/expense-transaction/entities/expense-transaction.entity"),
        ["./core/generated/lkexpense-category/entities/lkexpense-category.entity"]: await import("./core/generated/lkexpense-category/entities/lkexpense-category.entity"),
        ["./core/generated/group-member/dto/connect-group-member.dto"]: await import("./core/generated/group-member/dto/connect-group-member.dto"),
        ["./core/generated/role-to-permission/dto/connect-role-to-permission.dto"]: await import("./core/generated/role-to-permission/dto/connect-role-to-permission.dto"),
        ["./core/generated/transaction-participant/dto/connect-transaction-participant.dto"]: await import("./core/generated/transaction-participant/dto/connect-transaction-participant.dto"),
        ["./core/generated/user-to-role/dto/connect-user-to-role.dto"]: await import("./core/generated/user-to-role/dto/connect-user-to-role.dto"),
        ["./modules/core/generated/user/entities/user.entity"]: await import("./modules/core/generated/user/entities/user.entity"),
        ["./modules/core/generated/group/entities/group.entity"]: await import("./modules/core/generated/group/entities/group.entity"),
        ["./modules/core/generated/expense-transaction/entities/expense-transaction.entity"]: await import("./modules/core/generated/expense-transaction/entities/expense-transaction.entity"),
        ["./modules/core/generated/transaction/entities/transaction.entity"]: await import("./modules/core/generated/transaction/entities/transaction.entity"),
        ["./modules/core/generated/lkexpense-category/entities/lkexpense-category.entity"]: await import("./modules/core/generated/lkexpense-category/entities/lkexpense-category.entity"),
        ["./modules/core/generated/transaction-comment/entities/transaction-comment.entity"]: await import("./modules/core/generated/transaction-comment/entities/transaction-comment.entity"),
        ["./modules/core/generated/transaction-participant/entities/transaction-participant.entity"]: await import("./modules/core/generated/transaction-participant/entities/transaction-participant.entity"),
        ["./modules/core/generated/ledger/entities/ledger.entity"]: await import("./modules/core/generated/ledger/entities/ledger.entity"),
        ["./modules/core/generated/group-member/entities/group-member.entity"]: await import("./modules/core/generated/group-member/entities/group-member.entity"),
        ["./modules/core/generated/lk-country/entities/lk-country.entity"]: await import("./modules/core/generated/lk-country/entities/lk-country.entity"),
        ["./modules/core/generated/permission/entities/permission.entity"]: await import("./modules/core/generated/permission/entities/permission.entity"),
        ["./modules/core/generated/role-to-permission/entities/role-to-permission.entity"]: await import("./modules/core/generated/role-to-permission/entities/role-to-permission.entity"),
        ["./modules/core/generated/permission-group/entities/permission-group.entity"]: await import("./modules/core/generated/permission-group/entities/permission-group.entity"),
        ["./modules/core/generated/role/entities/role.entity"]: await import("./modules/core/generated/role/entities/role.entity"),
        ["./modules/core/generated/user-to-role/entities/user-to-role.entity"]: await import("./modules/core/generated/user-to-role/entities/user-to-role.entity"),
        ["./modules/core/generated/verification-token/entities/verification-token.entity"]: await import("./modules/core/generated/verification-token/entities/verification-token.entity"),
        ["./modules/core/generated/profile/entities/profile.entity"]: await import("./modules/core/generated/profile/entities/profile.entity"),
        ["./modules/core/generated/group-member/dto/connect-group-member.dto"]: await import("./modules/core/generated/group-member/dto/connect-group-member.dto"),
        ["./modules/core/generated/role-to-permission/dto/connect-role-to-permission.dto"]: await import("./modules/core/generated/role-to-permission/dto/connect-role-to-permission.dto"),
        ["./modules/core/generated/transaction-participant/dto/connect-transaction-participant.dto"]: await import("./modules/core/generated/transaction-participant/dto/connect-transaction-participant.dto"),
        ["./modules/core/generated/user-to-role/dto/connect-user-to-role.dto"]: await import("./modules/core/generated/user-to-role/dto/connect-user-to-role.dto"),
        ["./core/generated/lk-country/dto/lk-country.dto"]: await import("./core/generated/lk-country/dto/lk-country.dto"),
        ["./modules/group/application/endpoints/get-groups/get-groups.response"]: await import("./modules/group/application/endpoints/get-groups/get-groups.response"),
        ["./modules/auth/application/endpoints/logout/logout.response"]: await import("./modules/auth/application/endpoints/logout/logout.response"),
        ["./modules/user/application/endpoints/profile/getMyProfile/getMyProfile.response"]: await import("./modules/user/application/endpoints/profile/getMyProfile/getMyProfile.response"),
        ["./modules/auth/application/endpoints/login/login.response"]: await import("./modules/auth/application/endpoints/login/login.response"),
        ["./modules/auth/application/endpoints/renew-tokens/renew-tokens.response"]: await import("./modules/auth/application/endpoints/renew-tokens/renew-tokens.response"),
        ["./modules/group/application/endpoints/create-group/create-group.response"]: await import("./modules/group/application/endpoints/create-group/create-group.response"),
        ["./modules/misc/applications/endpoints/get-contents/get-contents.response"]: await import("./modules/misc/applications/endpoints/get-contents/get-contents.response")
    };
    return { "@nestjs/swagger": { "models": [[import("./shared/http/response.dto"), { "ApiResponseDto": { success: { required: true, type: () => Boolean }, code: { required: true, type: () => Number }, data: { required: false }, timestamp: { required: true, type: () => Number } }, "ApiListResponseDto": { success: { required: true, type: () => Boolean }, code: { required: true, type: () => Number }, data: { required: true }, timestamp: { required: true, type: () => Number } } }], [import("./modules/auth/application/endpoints/logout/logout.response"), { "LogoutResponse": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./core/generated/expense-transaction/dto/connect-expense-transaction.dto"), { "ConnectExpenseTransactionModel": { id: { required: true, type: () => String } } }], [import("./core/generated/expense-transaction/dto/create-expense-transaction.dto"), { "CreateExpenseTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, splitType: { required: true, type: () => Object } } }], [import("./core/generated/expense-transaction/dto/update-expense-transaction.dto"), { "UpdateExpenseTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, splitType: { required: false, type: () => Object } } }], [import("./core/generated/expense-transaction/dto/expense-transaction.dto"), { "ExpenseTransactionModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, splitType: { required: true, type: () => Object } } }], [import("./core/generated/verification-token/entities/verification-token.entity"), { "VerificationTokenEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date }, isVerified: { required: true, type: () => Boolean }, isUsed: { required: true, type: () => Boolean }, userId: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity, nullable: true } } }], [import("./core/generated/permission-group/entities/permission-group.entity"), { "PermissionGroupEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, permissions: { required: false, type: () => [t["./core/generated/permission/entities/permission.entity"].PermissionEntity] } } }], [import("./core/generated/permission/entities/permission.entity"), { "PermissionEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canCreate: { required: true, type: () => Boolean }, canRead: { required: true, type: () => Boolean }, canUpdate: { required: true, type: () => Boolean }, canDelete: { required: true, type: () => Boolean }, permissionGroupId: { required: true, type: () => Number, nullable: true }, roles: { required: false, type: () => [t["./core/generated/role-to-permission/entities/role-to-permission.entity"].RoleToPermissionEntity] }, permissionGroup: { required: false, type: () => t["./core/generated/permission-group/entities/permission-group.entity"].PermissionGroupEntity, nullable: true } } }], [import("./core/generated/role-to-permission/entities/role-to-permission.entity"), { "RoleToPermissionEntity": { roleId: { required: true, type: () => String }, permissionId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, role: { required: false, type: () => t["./core/generated/role/entities/role.entity"].RoleEntity }, permission: { required: false, type: () => t["./core/generated/permission/entities/permission.entity"].PermissionEntity } } }], [import("./core/generated/role/entities/role.entity"), { "RoleEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canBeUpdated: { required: true, type: () => Boolean }, canBeDeleted: { required: true, type: () => Boolean }, users: { required: false, type: () => [t["./core/generated/user-to-role/entities/user-to-role.entity"].UserToRoleEntity] }, permissions: { required: false, type: () => [t["./core/generated/role-to-permission/entities/role-to-permission.entity"].RoleToPermissionEntity] } } }], [import("./core/generated/user-to-role/entities/user-to-role.entity"), { "UserToRoleEntity": { userId: { required: true, type: () => String }, roleId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, user: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity }, role: { required: false, type: () => t["./core/generated/role/entities/role.entity"].RoleEntity } } }], [import("./core/generated/profile/entities/profile.entity"), { "ProfileEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, phoneNumber: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, qrUrl: { required: true, type: () => String, nullable: true }, address: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity } } }], [import("./core/generated/transaction-comment/entities/transaction-comment.entity"), { "TransactionCommentEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionId: { required: true, type: () => String }, ownerUserId: { required: true, type: () => String }, content: { required: true, type: () => Object }, transaction: { required: false, type: () => t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity }, owner: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity } } }], [import("./core/generated/transaction-participant/entities/transaction-participant.entity"), { "TransactionParticipantEntity": { userId: { required: true, type: () => String }, transactionId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity }, transaction: { required: false, type: () => t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity } } }], [import("./core/generated/ledger/entities/ledger.entity"), { "LedgerEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal }, userIdFrom: { required: true, type: () => String }, userIdTo: { required: true, type: () => String }, transactionId: { required: true, type: () => String }, transaction: { required: false, type: () => t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity }, userFrom: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity }, userTo: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity } } }], [import("./core/generated/user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: true, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String }, status: { required: true, type: () => Object }, userType: { required: true, type: () => Object }, groupOwner: { required: false, type: () => [t["./core/generated/group/entities/group.entity"].GroupEntity] }, verificationTokens: { required: false, type: () => [t["./core/generated/verification-token/entities/verification-token.entity"].VerificationTokenEntity] }, roles: { required: false, type: () => [t["./core/generated/user-to-role/entities/user-to-role.entity"].UserToRoleEntity] }, groupMember: { required: false, type: () => [t["./core/generated/group-member/entities/group-member.entity"].GroupMemberEntity] }, profile: { required: false, type: () => t["./core/generated/profile/entities/profile.entity"].ProfileEntity, nullable: true }, ownerTransaction: { required: false, type: () => [t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity] }, comments: { required: false, type: () => [t["./core/generated/transaction-comment/entities/transaction-comment.entity"].TransactionCommentEntity] }, transaction: { required: false, type: () => [t["./core/generated/transaction-participant/entities/transaction-participant.entity"].TransactionParticipantEntity] }, expenses: { required: false, type: () => [t["./core/generated/ledger/entities/ledger.entity"].LedgerEntity] }, settlements: { required: false, type: () => [t["./core/generated/ledger/entities/ledger.entity"].LedgerEntity] } } }], [import("./core/generated/group-member/entities/group-member.entity"), { "GroupMemberEntity": { memberId: { required: true, type: () => String }, groupId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, member: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity }, group: { required: false, type: () => t["./core/generated/group/entities/group.entity"].GroupEntity } } }], [import("./core/generated/lk-country/entities/lk-country.entity"), { "LkCountryEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String }, groups: { required: false, type: () => [t["./core/generated/group/entities/group.entity"].GroupEntity] } } }], [import("./core/generated/group/entities/group.entity"), { "GroupEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, group_name: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, groupType: { required: true, type: () => Object }, ownerId: { required: true, type: () => String }, lkCurrencyId: { required: true, type: () => String, nullable: true }, members: { required: false, type: () => [t["./core/generated/group-member/entities/group-member.entity"].GroupMemberEntity] }, transactions: { required: false, type: () => [t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity] }, country: { required: false, type: () => t["./core/generated/lk-country/entities/lk-country.entity"].LkCountryEntity, nullable: true }, owner: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity } } }], [import("./core/generated/transaction/entities/transaction.entity"), { "TransactionEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object }, groupId: { required: true, type: () => String }, ownerUserId: { required: true, type: () => String }, group: { required: false, type: () => t["./core/generated/group/entities/group.entity"].GroupEntity }, owner: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity }, expenseTransaction: { required: false, type: () => [t["./core/generated/expense-transaction/entities/expense-transaction.entity"].ExpenseTransactionEntity] }, comments: { required: false, type: () => [t["./core/generated/transaction-comment/entities/transaction-comment.entity"].TransactionCommentEntity] }, participants: { required: false, type: () => [t["./core/generated/transaction-participant/entities/transaction-participant.entity"].TransactionParticipantEntity] }, ledgers: { required: false, type: () => [t["./core/generated/ledger/entities/ledger.entity"].LedgerEntity] } } }], [import("./core/generated/lkexpense-category/entities/lkexpense-category.entity"), { "LKExpenseCategoryEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String }, expenses: { required: false, type: () => [t["./core/generated/expense-transaction/entities/expense-transaction.entity"].ExpenseTransactionEntity] } } }], [import("./core/generated/expense-transaction/entities/expense-transaction.entity"), { "ExpenseTransactionEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, splitType: { required: true, type: () => Object }, lkCategoryId: { required: true, type: () => String, nullable: true }, transactionId: { required: true, type: () => String }, transaction: { required: false, type: () => t["./core/generated/transaction/entities/transaction.entity"].TransactionEntity }, category: { required: false, type: () => t["./core/generated/lkexpense-category/entities/lkexpense-category.entity"].LKExpenseCategoryEntity, nullable: true } } }], [import("./core/generated/group-member/dto/connect-group-member.dto"), { "GroupMemberMemberIdGroupIdUniqueInputModel": { memberId: { required: true, type: () => String }, groupId: { required: true, type: () => String } }, "ConnectGroupMemberModel": { memberId_groupId: { required: true, type: () => t["./core/generated/group-member/dto/connect-group-member.dto"].GroupMemberMemberIdGroupIdUniqueInputModel } } }], [import("./core/generated/group-member/dto/create-group-member.dto"), { "CreateGroupMemberModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/group-member/dto/update-group-member.dto"), { "UpdateGroupMemberModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/group-member/dto/group-member.dto"), { "GroupMemberModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./core/generated/group/dto/connect-group.dto"), { "ConnectGroupModel": { id: { required: true, type: () => String } } }], [import("./core/generated/group/dto/create-group.dto"), { "CreateGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, group_name: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, groupType: { required: true, type: () => Object } } }], [import("./core/generated/group/dto/update-group.dto"), { "UpdateGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, group_name: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, groupType: { required: false, type: () => Object } } }], [import("./core/generated/group/dto/group.dto"), { "GroupModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, groupName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, groupType: { required: true, type: () => Object }, slug: { required: true, type: () => String } } }], [import("./core/generated/ledger/dto/connect-ledger.dto"), { "ConnectLedgerModel": { id: { required: true, type: () => String } } }], [import("./core/generated/ledger/dto/create-ledger.dto"), { "CreateLedgerModel": { updatedById: { required: false, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./core/generated/ledger/dto/update-ledger.dto"), { "UpdateLedgerModel": { updatedById: { required: false, type: () => String, nullable: true }, amount: { required: false, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./core/generated/ledger/dto/ledger.dto"), { "LedgerModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./core/generated/lk-country/dto/connect-lk-country.dto"), { "ConnectLkCountryModel": { id: { required: true, type: () => String } } }], [import("./core/generated/lk-country/dto/create-lk-country.dto"), { "CreateLkCountryModel": { id: { required: true, type: () => String }, updatedById: { required: false, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String } } }], [import("./core/generated/lk-country/dto/update-lk-country.dto"), { "UpdateLkCountryModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: false, type: () => String }, currencyCode: { required: false, type: () => String }, currencySymbol: { required: false, type: () => String } } }], [import("./core/generated/lk-country/dto/lk-country.dto"), { "LkCountryModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String } } }], [import("./core/generated/lkexpense-category/dto/connect-lkexpense-category.dto"), { "ConnectLKExpenseCategoryModel": { id: { required: true, type: () => String } } }], [import("./core/generated/lkexpense-category/dto/create-lkexpense-category.dto"), { "CreateLKExpenseCategoryModel": { updatedById: { required: false, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String } } }], [import("./core/generated/lkexpense-category/dto/update-lkexpense-category.dto"), { "UpdateLKExpenseCategoryModel": { updatedById: { required: false, type: () => String, nullable: true }, type: { required: false, type: () => Object }, name: { required: false, type: () => String } } }], [import("./core/generated/lkexpense-category/dto/lkexpense-category.dto"), { "LKExpenseCategoryModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String } } }], [import("./core/generated/permission-group/dto/connect-permission-group.dto"), { "ConnectPermissionGroupModel": { id: { required: true, type: () => Number } } }], [import("./core/generated/permission-group/dto/create-permission-group.dto"), { "CreatePermissionGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/permission-group/dto/update-permission-group.dto"), { "UpdatePermissionGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/permission-group/dto/permission-group.dto"), { "PermissionGroupModel": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true } } }], [import("./core/generated/permission/dto/connect-permission.dto"), { "ConnectPermissionModel": { id: { required: true, type: () => Number } } }], [import("./core/generated/permission/dto/create-permission.dto"), { "CreatePermissionModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/permission/dto/update-permission.dto"), { "UpdatePermissionModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: false, type: () => String }, displayName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/permission/dto/permission.dto"), { "PermissionModel": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canCreate: { required: true, type: () => Boolean }, canRead: { required: true, type: () => Boolean }, canUpdate: { required: true, type: () => Boolean }, canDelete: { required: true, type: () => Boolean } } }], [import("./core/generated/profile/dto/connect-profile.dto"), { "ConnectProfileModel": { id: { required: true, type: () => String } } }], [import("./core/generated/profile/dto/create-profile.dto"), { "CreateProfileModel": { updatedById: { required: false, type: () => String, nullable: true }, phoneNumber: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, qrUrl: { required: false, type: () => String, nullable: true }, address: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/profile/dto/update-profile.dto"), { "UpdateProfileModel": { updatedById: { required: false, type: () => String, nullable: true }, phoneNumber: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, qrUrl: { required: false, type: () => String, nullable: true }, address: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/profile/dto/profile.dto"), { "ProfileModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, phoneNumber: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, qrUrl: { required: true, type: () => String, nullable: true }, address: { required: true, type: () => String, nullable: true } } }], [import("./core/generated/role-to-permission/dto/connect-role-to-permission.dto"), { "RoleToPermissionRoleIdPermissionIdUniqueInputModel": { roleId: { required: true, type: () => String }, permissionId: { required: true, type: () => Number } }, "ConnectRoleToPermissionModel": { roleId_permissionId: { required: true, type: () => t["./core/generated/role-to-permission/dto/connect-role-to-permission.dto"].RoleToPermissionRoleIdPermissionIdUniqueInputModel } } }], [import("./core/generated/role-to-permission/dto/create-role-to-permission.dto"), { "CreateRoleToPermissionModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/role-to-permission/dto/update-role-to-permission.dto"), { "UpdateRoleToPermissionModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/role-to-permission/dto/role-to-permission.dto"), { "RoleToPermissionModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./core/generated/role/dto/connect-role.dto"), { "ConnectRoleModel": { id: { required: true, type: () => String } } }], [import("./core/generated/role/dto/create-role.dto"), { "CreateRoleModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/role/dto/update-role.dto"), { "UpdateRoleModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: false, type: () => String }, displayName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/role/dto/role.dto"), { "RoleModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canBeUpdated: { required: true, type: () => Boolean }, canBeDeleted: { required: true, type: () => Boolean } } }], [import("./core/generated/transaction-comment/dto/connect-transaction-comment.dto"), { "ConnectTransactionCommentModel": { id: { required: true, type: () => String } } }], [import("./core/generated/transaction-comment/dto/create-transaction-comment.dto"), { "CreateTransactionCommentModel": { updatedById: { required: false, type: () => String, nullable: true }, content: { required: true, type: () => Object } } }], [import("./core/generated/transaction-comment/dto/update-transaction-comment.dto"), { "UpdateTransactionCommentModel": { updatedById: { required: false, type: () => String, nullable: true }, content: { required: false, type: () => Object } } }], [import("./core/generated/transaction-comment/dto/transaction-comment.dto"), { "TransactionCommentModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => Object } } }], [import("./core/generated/transaction-participant/dto/connect-transaction-participant.dto"), { "TransactionParticipantUserIdTransactionIdUniqueInputModel": { userId: { required: true, type: () => String }, transactionId: { required: true, type: () => String } }, "ConnectTransactionParticipantModel": { userId_transactionId: { required: true, type: () => t["./core/generated/transaction-participant/dto/connect-transaction-participant.dto"].TransactionParticipantUserIdTransactionIdUniqueInputModel } } }], [import("./core/generated/transaction-participant/dto/create-transaction-participant.dto"), { "CreateTransactionParticipantModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/transaction-participant/dto/update-transaction-participant.dto"), { "UpdateTransactionParticipantModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./core/generated/transaction-participant/dto/transaction-participant.dto"), { "TransactionParticipantModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./core/generated/transaction/dto/connect-transaction.dto"), { "ConnectTransactionModel": { id: { required: true, type: () => String } } }], [import("./core/generated/transaction/dto/create-transaction.dto"), { "CreateTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object } } }], [import("./core/generated/transaction/dto/update-transaction.dto"), { "UpdateTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, transactionType: { required: false, type: () => Object } } }], [import("./core/generated/transaction/dto/transaction.dto"), { "TransactionModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object } } }], [import("./core/generated/user-to-role/dto/connect-user-to-role.dto"), { "UserToRoleUserIdRoleIdUniqueInputModel": { userId: { required: true, type: () => String }, roleId: { required: true, type: () => String } }, "ConnectUserToRoleModel": { userId_roleId: { required: true, type: () => t["./core/generated/user-to-role/dto/connect-user-to-role.dto"].UserToRoleUserIdRoleIdUniqueInputModel } } }], [import("./core/generated/user-to-role/dto/create-user-to-role.dto"), { "CreateUserToRoleModel": {} }], [import("./core/generated/user-to-role/dto/update-user-to-role.dto"), { "UpdateUserToRoleModel": {} }], [import("./core/generated/user-to-role/dto/user-to-role.dto"), { "UserToRoleModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./core/generated/user/dto/connect-user.dto"), { "ConnectUserModel": { id: { required: false, type: () => String }, username: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./core/generated/user/dto/create-user.dto"), { "CreateUserModel": { updatedById: { required: false, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: false, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String } } }], [import("./core/generated/user/dto/update-user.dto"), { "UpdateUserModel": { updatedById: { required: false, type: () => String, nullable: true }, firstName: { required: false, type: () => String }, lastName: { required: false, type: () => String }, middleName: { required: false, type: () => String, nullable: true }, username: { required: false, type: () => String }, email: { required: false, type: () => String }, fullName: { required: false, type: () => String, nullable: true }, hashedPassword: { required: false, type: () => String } } }], [import("./core/generated/user/dto/user.dto"), { "UserModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: true, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String }, status: { required: true, type: () => Object }, userType: { required: true, type: () => Object } } }], [import("./core/generated/verification-token/dto/connect-verification-token.dto"), { "ConnectVerificationTokenModel": { id: { required: true, type: () => String } } }], [import("./core/generated/verification-token/dto/create-verification-token.dto"), { "CreateVerificationTokenModel": { updatedById: { required: false, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date } } }], [import("./core/generated/verification-token/dto/update-verification-token.dto"), { "UpdateVerificationTokenModel": { updatedById: { required: false, type: () => String, nullable: true }, resource: { required: false, type: () => String }, token: { required: false, type: () => String }, expiration: { required: false, type: () => Date } } }], [import("./core/generated/verification-token/dto/verification-token.dto"), { "VerificationTokenModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date }, isVerified: { required: true, type: () => Boolean }, isUsed: { required: true, type: () => Boolean } } }], [import("./shared/pagination/paginated-response.dto"), { "PaginatedApiResponseDto": { skippedRecords: { required: true, type: () => Number }, totalRecords: { required: true, type: () => Number }, data: { required: true }, payloadSize: { required: true, type: () => Number }, hasNext: { required: true, type: () => Boolean } } }], [import("./modules/user/application/endpoints/profile/getMyProfile/getMyProfile.response"), { "GetMyProfileQueryResponse": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: true, type: () => String, nullable: true }, status: { required: true, type: () => Object }, userType: { required: true, type: () => Object }, roles: { required: true, type: () => [String] }, permissions: { required: true, type: () => [String] }, phoneNumber: { required: true, type: () => String }, address: { required: true, type: () => String }, qrUrl: { required: true, type: () => String }, avatarUrl: { required: true, type: () => String } } }], [import("./modules/user/application/endpoints/profile/updateMyProfile/updateMyProfile.request-body"), { "UpdateMyProfileRequestBody": { email: { required: true, type: () => String }, firstName: { required: true, type: () => String, maxLength: 50, pattern: "^[A-Za-z ]+$" }, lastName: { required: true, type: () => String, maxLength: 50, pattern: "^[A-Za-z ]+$" }, middleName: { required: false, type: () => String, maxLength: 50, pattern: "^[A-Za-z ]+$" }, phoneNumber: { required: true, type: () => String, pattern: "^[+][0-9]+$" }, address: { required: true, type: () => String, maxLength: 255 }, qrUrl: { required: false, type: () => String, maxLength: 255 }, avatarUrl: { required: false, type: () => String, maxLength: 255 } } }], [import("./modules/user/application/endpoints/profile/updatePassword/updatePassword.request-body"), { "UpdatePasswordRequestBody": { password: { required: true, type: () => String }, newPassword: { required: true, type: () => String } } }], [import("./modules/auth/application/endpoints/login/login.request-body"), { "LoginRequestBody": { username: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/application/endpoints/login/login.response"), { "LoginResponse": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./modules/auth/application/endpoints/renew-tokens/renew-tokens.request-body"), { "RenewTokensRequestBody": { refreshToken: { required: true, type: () => String } } }], [import("./modules/auth/application/endpoints/renew-tokens/renew-tokens.response"), { "RenewTokensResponse": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./modules/auth/application/endpoints/signup/signup.request-body"), { "SignupRequestBody": { username: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/group/application/endpoints/create-group/create-group.request-body"), { "CreateGroupRequestBody": { name: { required: true, type: () => String, maxLength: 50 }, description: { required: false, type: () => String, maxLength: 255 }, avatarUrl: { required: false, type: () => String, maxLength: 1000 }, type: { required: true }, members: { required: true, type: () => [String] }, lkCurrencyId: { required: true, type: () => String } } }], [import("./modules/group/application/endpoints/create-group/create-group.response"), { "CreateGroupResponse": {} }], [import("./modules/misc/applications/endpoints/get-contents/get-contents.response"), { "GetContentsResponse": { countryOptions: { required: true, type: () => [t["./core/generated/lk-country/dto/lk-country.dto"].LkCountryModel] }, expenseCategoryOptions: { required: true, type: () => Object } } }], [import("./modules/core/generated/group-member/entities/group-member.entity"), { "GroupMemberEntity": { memberId: { required: true, type: () => String }, groupId: { required: true, type: () => String }, status: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, member: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity }, group: { required: false, type: () => t["./modules/core/generated/group/entities/group.entity"].GroupEntity } } }], [import("./modules/core/generated/lkexpense-category/entities/lkexpense-category.entity"), { "LKExpenseCategoryEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String }, expenses: { required: false, type: () => [t["./modules/core/generated/expense-transaction/entities/expense-transaction.entity"].ExpenseTransactionEntity] } } }], [import("./modules/core/generated/expense-transaction/entities/expense-transaction.entity"), { "ExpenseTransactionEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, splitType: { required: true, type: () => Object }, lkCategoryId: { required: true, type: () => String, nullable: true }, transactionId: { required: true, type: () => String }, transaction: { required: false, type: () => t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity }, category: { required: false, type: () => t["./modules/core/generated/lkexpense-category/entities/lkexpense-category.entity"].LKExpenseCategoryEntity, nullable: true } } }], [import("./modules/core/generated/transaction-comment/entities/transaction-comment.entity"), { "TransactionCommentEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionId: { required: true, type: () => String }, ownerUserId: { required: true, type: () => String }, content: { required: true, type: () => Object }, transaction: { required: false, type: () => t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity }, owner: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity } } }], [import("./modules/core/generated/transaction-participant/entities/transaction-participant.entity"), { "TransactionParticipantEntity": { userId: { required: true, type: () => String }, transactionId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity }, transaction: { required: false, type: () => t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity } } }], [import("./modules/core/generated/ledger/entities/ledger.entity"), { "LedgerEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal }, userIdFrom: { required: true, type: () => String }, userIdTo: { required: true, type: () => String }, transactionId: { required: true, type: () => String }, transaction: { required: false, type: () => t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity }, userFrom: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity }, userTo: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity } } }], [import("./modules/core/generated/transaction/entities/transaction.entity"), { "TransactionEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object }, groupId: { required: true, type: () => String }, ownerUserId: { required: true, type: () => String }, group: { required: false, type: () => t["./modules/core/generated/group/entities/group.entity"].GroupEntity }, owner: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity }, expenseTransaction: { required: false, type: () => [t["./modules/core/generated/expense-transaction/entities/expense-transaction.entity"].ExpenseTransactionEntity] }, comments: { required: false, type: () => [t["./modules/core/generated/transaction-comment/entities/transaction-comment.entity"].TransactionCommentEntity] }, participants: { required: false, type: () => [t["./modules/core/generated/transaction-participant/entities/transaction-participant.entity"].TransactionParticipantEntity] }, ledgers: { required: false, type: () => [t["./modules/core/generated/ledger/entities/ledger.entity"].LedgerEntity] } } }], [import("./modules/core/generated/lk-country/entities/lk-country.entity"), { "LkCountryEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String }, groups: { required: false, type: () => [t["./modules/core/generated/group/entities/group.entity"].GroupEntity] } } }], [import("./modules/core/generated/group/entities/group.entity"), { "GroupEntity": { id: { required: true, type: () => String }, slug: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, groupName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, groupType: { required: true, type: () => Object }, ownerId: { required: true, type: () => String }, lkCurrencyId: { required: true, type: () => String, nullable: true }, members: { required: false, type: () => [t["./modules/core/generated/group-member/entities/group-member.entity"].GroupMemberEntity] }, transactions: { required: false, type: () => [t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity] }, country: { required: false, type: () => t["./modules/core/generated/lk-country/entities/lk-country.entity"].LkCountryEntity, nullable: true }, owner: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity } } }], [import("./modules/core/generated/verification-token/entities/verification-token.entity"), { "VerificationTokenEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date }, isVerified: { required: true, type: () => Boolean }, isUsed: { required: true, type: () => Boolean }, userId: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity, nullable: true } } }], [import("./modules/core/generated/permission-group/entities/permission-group.entity"), { "PermissionGroupEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, permissions: { required: false, type: () => [t["./modules/core/generated/permission/entities/permission.entity"].PermissionEntity] } } }], [import("./modules/core/generated/permission/entities/permission.entity"), { "PermissionEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canCreate: { required: true, type: () => Boolean }, canRead: { required: true, type: () => Boolean }, canUpdate: { required: true, type: () => Boolean }, canDelete: { required: true, type: () => Boolean }, permissionGroupId: { required: true, type: () => Number, nullable: true }, roles: { required: false, type: () => [t["./modules/core/generated/role-to-permission/entities/role-to-permission.entity"].RoleToPermissionEntity] }, permissionGroup: { required: false, type: () => t["./modules/core/generated/permission-group/entities/permission-group.entity"].PermissionGroupEntity, nullable: true } } }], [import("./modules/core/generated/role-to-permission/entities/role-to-permission.entity"), { "RoleToPermissionEntity": { roleId: { required: true, type: () => String }, permissionId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, role: { required: false, type: () => t["./modules/core/generated/role/entities/role.entity"].RoleEntity }, permission: { required: false, type: () => t["./modules/core/generated/permission/entities/permission.entity"].PermissionEntity } } }], [import("./modules/core/generated/role/entities/role.entity"), { "RoleEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canBeUpdated: { required: true, type: () => Boolean }, canBeDeleted: { required: true, type: () => Boolean }, users: { required: false, type: () => [t["./modules/core/generated/user-to-role/entities/user-to-role.entity"].UserToRoleEntity] }, permissions: { required: false, type: () => [t["./modules/core/generated/role-to-permission/entities/role-to-permission.entity"].RoleToPermissionEntity] } } }], [import("./modules/core/generated/user-to-role/entities/user-to-role.entity"), { "UserToRoleEntity": { userId: { required: true, type: () => String }, roleId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, user: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity }, role: { required: false, type: () => t["./modules/core/generated/role/entities/role.entity"].RoleEntity } } }], [import("./modules/core/generated/profile/entities/profile.entity"), { "ProfileEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, phoneNumber: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, qrUrl: { required: true, type: () => String, nullable: true }, address: { required: true, type: () => String, nullable: true }, user: { required: false, type: () => t["./modules/core/generated/user/entities/user.entity"].UserEntity } } }], [import("./modules/core/generated/user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: true, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String }, status: { required: true, type: () => Object }, userType: { required: true, type: () => Object }, groupOwner: { required: false, type: () => [t["./modules/core/generated/group/entities/group.entity"].GroupEntity] }, verificationTokens: { required: false, type: () => [t["./modules/core/generated/verification-token/entities/verification-token.entity"].VerificationTokenEntity] }, roles: { required: false, type: () => [t["./modules/core/generated/user-to-role/entities/user-to-role.entity"].UserToRoleEntity] }, groupMember: { required: false, type: () => [t["./modules/core/generated/group-member/entities/group-member.entity"].GroupMemberEntity] }, profile: { required: false, type: () => t["./modules/core/generated/profile/entities/profile.entity"].ProfileEntity, nullable: true }, ownerTransaction: { required: false, type: () => [t["./modules/core/generated/transaction/entities/transaction.entity"].TransactionEntity] }, comments: { required: false, type: () => [t["./modules/core/generated/transaction-comment/entities/transaction-comment.entity"].TransactionCommentEntity] }, transaction: { required: false, type: () => [t["./modules/core/generated/transaction-participant/entities/transaction-participant.entity"].TransactionParticipantEntity] }, expenses: { required: false, type: () => [t["./modules/core/generated/ledger/entities/ledger.entity"].LedgerEntity] }, settlements: { required: false, type: () => [t["./modules/core/generated/ledger/entities/ledger.entity"].LedgerEntity] } } }], [import("./modules/core/generated/group-member/dto/connect-group-member.dto"), { "GroupMemberMemberIdGroupIdUniqueInputModel": { memberId: { required: true, type: () => String }, groupId: { required: true, type: () => String } }, "ConnectGroupMemberModel": { memberId_groupId: { required: true, type: () => t["./modules/core/generated/group-member/dto/connect-group-member.dto"].GroupMemberMemberIdGroupIdUniqueInputModel } } }], [import("./modules/core/generated/role-to-permission/dto/connect-role-to-permission.dto"), { "RoleToPermissionRoleIdPermissionIdUniqueInputModel": { roleId: { required: true, type: () => String }, permissionId: { required: true, type: () => Number } }, "ConnectRoleToPermissionModel": { roleId_permissionId: { required: true, type: () => t["./modules/core/generated/role-to-permission/dto/connect-role-to-permission.dto"].RoleToPermissionRoleIdPermissionIdUniqueInputModel } } }], [import("./modules/core/generated/transaction-participant/dto/connect-transaction-participant.dto"), { "TransactionParticipantUserIdTransactionIdUniqueInputModel": { userId: { required: true, type: () => String }, transactionId: { required: true, type: () => String } }, "ConnectTransactionParticipantModel": { userId_transactionId: { required: true, type: () => t["./modules/core/generated/transaction-participant/dto/connect-transaction-participant.dto"].TransactionParticipantUserIdTransactionIdUniqueInputModel } } }], [import("./modules/core/generated/user-to-role/dto/connect-user-to-role.dto"), { "UserToRoleUserIdRoleIdUniqueInputModel": { userId: { required: true, type: () => String }, roleId: { required: true, type: () => String } }, "ConnectUserToRoleModel": { userId_roleId: { required: true, type: () => t["./modules/core/generated/user-to-role/dto/connect-user-to-role.dto"].UserToRoleUserIdRoleIdUniqueInputModel } } }], [import("./core/generated/identity/dto/connect-identity.dto"), { "ConnectIdentityModel": { id: { required: false, type: () => String }, username: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./core/generated/identity/dto/create-identity.dto"), { "CreateIdentityModel": { updatedById: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String } } }], [import("./core/generated/identity/dto/identity.dto"), { "IdentityModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, emailVerified: { required: true, type: () => Boolean } } }], [import("./core/generated/identity/dto/update-identity.dto"), { "UpdateIdentityModel": { updatedById: { required: false, type: () => String, nullable: true }, username: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./core/generated/identity/entities/identity.entity"), { "IdentityEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, userId: { required: true, type: () => String }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, emailVerified: { required: true, type: () => Boolean }, user: { required: false, type: () => t["./core/generated/user/entities/user.entity"].UserEntity } } }], [import("./modules/auth/application/endpoints/logout/logout.request-body"), { "LogoutRequestBody": {} }], [import("./modules/core/generated/expense-transaction/dto/connect-expense-transaction.dto"), { "ConnectExpenseTransactionModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/expense-transaction/dto/create-expense-transaction.dto"), { "CreateExpenseTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, splitType: { required: true, type: () => Object } } }], [import("./modules/core/generated/expense-transaction/dto/update-expense-transaction.dto"), { "UpdateExpenseTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, splitType: { required: false, type: () => Object } } }], [import("./modules/core/generated/expense-transaction/dto/expense-transaction.dto"), { "ExpenseTransactionModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, splitType: { required: true, type: () => Object } } }], [import("./modules/core/generated/group-member/dto/create-group-member.dto"), { "CreateGroupMemberModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/group-member/dto/update-group-member.dto"), { "UpdateGroupMemberModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/group-member/dto/group-member.dto"), { "GroupMemberModel": { status: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./modules/core/generated/group/dto/connect-group.dto"), { "ConnectGroupModel": { id: { required: false, type: () => String }, slug: { required: false, type: () => String } } }], [import("./modules/core/generated/group/dto/create-group.dto"), { "CreateGroupModel": { slug: { required: true, type: () => String }, updatedById: { required: false, type: () => String, nullable: true }, groupName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, groupType: { required: true, type: () => Object } } }], [import("./modules/core/generated/group/dto/update-group.dto"), { "UpdateGroupModel": { slug: { required: false, type: () => String }, updatedById: { required: false, type: () => String, nullable: true }, groupName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, groupType: { required: false, type: () => Object } } }], [import("./modules/core/generated/group/dto/group.dto"), { "GroupModel": { id: { required: true, type: () => String }, slug: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, groupName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, groupType: { required: true, type: () => Object } } }], [import("./modules/core/generated/ledger/dto/connect-ledger.dto"), { "ConnectLedgerModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/ledger/dto/create-ledger.dto"), { "CreateLedgerModel": { updatedById: { required: false, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./modules/core/generated/ledger/dto/update-ledger.dto"), { "UpdateLedgerModel": { updatedById: { required: false, type: () => String, nullable: true }, amount: { required: false, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./modules/core/generated/ledger/dto/ledger.dto"), { "LedgerModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, amount: { required: true, type: () => t[".pnpm/@prisma+client@5.20.0_prisma@5.20.0/node_modules/@prisma/client/runtime/library"].Decimal } } }], [import("./modules/core/generated/lk-country/dto/connect-lk-country.dto"), { "ConnectLkCountryModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/lk-country/dto/create-lk-country.dto"), { "CreateLkCountryModel": { id: { required: true, type: () => String }, updatedById: { required: false, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String } } }], [import("./modules/core/generated/lk-country/dto/update-lk-country.dto"), { "UpdateLkCountryModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: false, type: () => String }, currencyCode: { required: false, type: () => String }, currencySymbol: { required: false, type: () => String } } }], [import("./modules/core/generated/lk-country/dto/lk-country.dto"), { "LkCountryModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, currencyCode: { required: true, type: () => String }, currencySymbol: { required: true, type: () => String } } }], [import("./modules/core/generated/lkexpense-category/dto/connect-lkexpense-category.dto"), { "ConnectLKExpenseCategoryModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/lkexpense-category/dto/create-lkexpense-category.dto"), { "CreateLKExpenseCategoryModel": { updatedById: { required: false, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String } } }], [import("./modules/core/generated/lkexpense-category/dto/update-lkexpense-category.dto"), { "UpdateLKExpenseCategoryModel": { updatedById: { required: false, type: () => String, nullable: true }, type: { required: false, type: () => Object }, name: { required: false, type: () => String } } }], [import("./modules/core/generated/lkexpense-category/dto/lkexpense-category.dto"), { "LKExpenseCategoryModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, type: { required: true, type: () => Object }, name: { required: true, type: () => String } } }], [import("./modules/core/generated/permission-group/dto/connect-permission-group.dto"), { "ConnectPermissionGroupModel": { id: { required: true, type: () => Number } } }], [import("./modules/core/generated/permission-group/dto/create-permission-group.dto"), { "CreatePermissionGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/permission-group/dto/update-permission-group.dto"), { "UpdatePermissionGroupModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/permission-group/dto/permission-group.dto"), { "PermissionGroupModel": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true } } }], [import("./modules/core/generated/permission/dto/connect-permission.dto"), { "ConnectPermissionModel": { id: { required: true, type: () => Number } } }], [import("./modules/core/generated/permission/dto/create-permission.dto"), { "CreatePermissionModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/permission/dto/update-permission.dto"), { "UpdatePermissionModel": { updatedById: { required: false, type: () => String, nullable: true }, resourceName: { required: false, type: () => String }, displayName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/permission/dto/permission.dto"), { "PermissionModel": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resourceName: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canCreate: { required: true, type: () => Boolean }, canRead: { required: true, type: () => Boolean }, canUpdate: { required: true, type: () => Boolean }, canDelete: { required: true, type: () => Boolean } } }], [import("./modules/core/generated/profile/dto/connect-profile.dto"), { "ConnectProfileModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/profile/dto/create-profile.dto"), { "CreateProfileModel": { updatedById: { required: false, type: () => String, nullable: true }, phoneNumber: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, qrUrl: { required: false, type: () => String, nullable: true }, address: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/profile/dto/update-profile.dto"), { "UpdateProfileModel": { updatedById: { required: false, type: () => String, nullable: true }, phoneNumber: { required: false, type: () => String, nullable: true }, avatarUrl: { required: false, type: () => String, nullable: true }, qrUrl: { required: false, type: () => String, nullable: true }, address: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/profile/dto/profile.dto"), { "ProfileModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, phoneNumber: { required: true, type: () => String, nullable: true }, avatarUrl: { required: true, type: () => String, nullable: true }, qrUrl: { required: true, type: () => String, nullable: true }, address: { required: true, type: () => String, nullable: true } } }], [import("./modules/core/generated/role-to-permission/dto/create-role-to-permission.dto"), { "CreateRoleToPermissionModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/role-to-permission/dto/update-role-to-permission.dto"), { "UpdateRoleToPermissionModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/role-to-permission/dto/role-to-permission.dto"), { "RoleToPermissionModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./modules/core/generated/role/dto/connect-role.dto"), { "ConnectRoleModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/role/dto/create-role.dto"), { "CreateRoleModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/role/dto/update-role.dto"), { "UpdateRoleModel": { updatedById: { required: false, type: () => String, nullable: true }, name: { required: false, type: () => String }, displayName: { required: false, type: () => String }, description: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/role/dto/role.dto"), { "RoleModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, name: { required: true, type: () => String }, displayName: { required: true, type: () => String }, description: { required: true, type: () => String, nullable: true }, canBeUpdated: { required: true, type: () => Boolean }, canBeDeleted: { required: true, type: () => Boolean } } }], [import("./modules/core/generated/transaction-comment/dto/connect-transaction-comment.dto"), { "ConnectTransactionCommentModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/transaction-comment/dto/create-transaction-comment.dto"), { "CreateTransactionCommentModel": { updatedById: { required: false, type: () => String, nullable: true }, content: { required: true, type: () => Object } } }], [import("./modules/core/generated/transaction-comment/dto/update-transaction-comment.dto"), { "UpdateTransactionCommentModel": { updatedById: { required: false, type: () => String, nullable: true }, content: { required: false, type: () => Object } } }], [import("./modules/core/generated/transaction-comment/dto/transaction-comment.dto"), { "TransactionCommentModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, content: { required: true, type: () => Object } } }], [import("./modules/core/generated/transaction-participant/dto/create-transaction-participant.dto"), { "CreateTransactionParticipantModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/transaction-participant/dto/update-transaction-participant.dto"), { "UpdateTransactionParticipantModel": { updatedById: { required: false, type: () => String, nullable: true } } }], [import("./modules/core/generated/transaction-participant/dto/transaction-participant.dto"), { "TransactionParticipantModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true } } }], [import("./modules/core/generated/transaction/dto/connect-transaction.dto"), { "ConnectTransactionModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/transaction/dto/create-transaction.dto"), { "CreateTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object } } }], [import("./modules/core/generated/transaction/dto/update-transaction.dto"), { "UpdateTransactionModel": { updatedById: { required: false, type: () => String, nullable: true }, transactionType: { required: false, type: () => Object } } }], [import("./modules/core/generated/transaction/dto/transaction.dto"), { "TransactionModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, transactionType: { required: true, type: () => Object } } }], [import("./modules/core/generated/user-to-role/dto/create-user-to-role.dto"), { "CreateUserToRoleModel": {} }], [import("./modules/core/generated/user-to-role/dto/update-user-to-role.dto"), { "UpdateUserToRoleModel": {} }], [import("./modules/core/generated/user-to-role/dto/user-to-role.dto"), { "UserToRoleModel": { createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/core/generated/user/dto/connect-user.dto"), { "ConnectUserModel": { id: { required: false, type: () => String }, username: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./modules/core/generated/user/dto/create-user.dto"), { "CreateUserModel": { updatedById: { required: false, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: false, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String } } }], [import("./modules/core/generated/user/dto/update-user.dto"), { "UpdateUserModel": { updatedById: { required: false, type: () => String, nullable: true }, firstName: { required: false, type: () => String }, lastName: { required: false, type: () => String }, middleName: { required: false, type: () => String, nullable: true }, username: { required: false, type: () => String }, email: { required: false, type: () => String }, fullName: { required: false, type: () => String, nullable: true }, hashedPassword: { required: false, type: () => String } } }], [import("./modules/core/generated/user/dto/user.dto"), { "UserModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: true, type: () => String, nullable: true }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, fullName: { required: true, type: () => String, nullable: true }, hashedPassword: { required: true, type: () => String }, status: { required: true, type: () => Object }, userType: { required: true, type: () => Object } } }], [import("./modules/core/generated/verification-token/dto/connect-verification-token.dto"), { "ConnectVerificationTokenModel": { id: { required: true, type: () => String } } }], [import("./modules/core/generated/verification-token/dto/create-verification-token.dto"), { "CreateVerificationTokenModel": { updatedById: { required: false, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date } } }], [import("./modules/core/generated/verification-token/dto/update-verification-token.dto"), { "UpdateVerificationTokenModel": { updatedById: { required: false, type: () => String, nullable: true }, resource: { required: false, type: () => String }, token: { required: false, type: () => String }, expiration: { required: false, type: () => Date } } }], [import("./modules/core/generated/verification-token/dto/verification-token.dto"), { "VerificationTokenModel": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, updatedById: { required: true, type: () => String, nullable: true }, resource: { required: true, type: () => String }, token: { required: true, type: () => String }, expiration: { required: true, type: () => Date }, isVerified: { required: true, type: () => Boolean }, isUsed: { required: true, type: () => Boolean } } }], [import("./modules/group/application/endpoints/get-groups/get-groups.request-query"), { "GetGroupsRequestQuery": { search: { required: false, type: () => String, nullable: true }, skip: { required: false, type: () => Number, default: 0, minimum: 0 }, take: { required: false, type: () => Number, default: 10, minimum: 1 } } }], [import("./modules/group/application/endpoints/get-groups/get-groups.response"), { "GetGroupsResponse": { lkCurrencyId: { required: true, type: () => String }, ownerId: { required: true, type: () => String }, members: { required: true, type: () => [GroupUserDto] } }, "GetGroupsQueryResponse": { data: { required: true, type: () => [t["./modules/group/application/endpoints/get-groups/get-groups.response"].GetGroupsResponse] } } }]], "controllers": [[import("./modules/auth/application/endpoints/logout/logout.endpoint"), { "LogoutEndpoint": { "create": { type: t["./modules/auth/application/endpoints/logout/logout.response"].LogoutResponse } } }], [import("./modules/user/application/endpoints/profile/getMyProfile/getMyProfile.endpoint"), { "GetMyProfileEndpoint": { "get": { type: t["./modules/user/application/endpoints/profile/getMyProfile/getMyProfile.response"].GetMyProfileQueryResponse } } }], [import("./modules/user/application/endpoints/profile/updateMyProfile/updateMyProfile.endpoint"), { "UpdateMyProfileEndpoint": { "update": {} } }], [import("./modules/user/application/endpoints/profile/updatePassword/updatePassword.endpoint"), { "UpdatePasswordEndpoint": { "update": {} } }], [import("./modules/auth/application/endpoints/login/login.endpoint"), { "LoginEndpoint": { "create": { type: t["./modules/auth/application/endpoints/login/login.response"].LoginResponse } } }], [import("./modules/auth/application/endpoints/renew-tokens/renew-tokens.endpoint"), { "RenewTokensEndpoint": { "create": { type: t["./modules/auth/application/endpoints/renew-tokens/renew-tokens.response"].RenewTokensResponse } } }], [import("./modules/auth/application/endpoints/signup/signup.endpoint"), { "SignupEndpoint": { "create": {} } }], [import("./modules/group/application/endpoints/create-group/create-group.endpoint"), { "CreateGroupEndpoint": { "create": { type: t["./modules/group/application/endpoints/create-group/create-group.response"].CreateGroupResponse } } }], [import("./modules/misc/applications/endpoints/get-contents/get-contents.endpoint"), { "GetContentsEndpoint": { "get": { type: t["./modules/misc/applications/endpoints/get-contents/get-contents.response"].GetContentsResponse } } }], [import("./modules/group/application/endpoints/get-groups/get-groups.endpoint"), { "GetGroupsEndpoint": { "get": { type: t["./modules/group/application/endpoints/get-groups/get-groups.response"].GetGroupsQueryResponse } } }]] } };
};